{
	"name": "Copy all tables from SSMS",
	"properties": {
		"activities": [
			{
				"name": "Look up for all tables",
				"description": "This activity will look up for all the schemas and the table inside them",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "SqlServerSource",
						"sqlReaderQuery": "Select \ns.name as SchemaName,\nt.name as TableName\nfrom sys.tables t\ninner join sys.schemas s\non t.schema_id=s.schema_id\norder by SchemaName",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "SqlServerAllTables",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "ForEach Schema Table",
				"description": "This activity will iterate through the list of the schema and tables inside it.",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Look up for all tables",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Look up for all tables').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Copy Each Table",
							"description": "This activity will copy each table one by one.",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderQuery": {
										"value": "@{concat('SELECT * From ', item().SchemaName, '.', item().TableName)}",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "ParquetSink",
									"storeSettings": {
										"type": "AzureBlobFSWriteSettings"
									},
									"formatSettings": {
										"type": "ParquetWriteSettings"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "SqlServerAllTables",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "AllCopiedTables",
									"type": "DatasetReference",
									"parameters": {
										"schemaname": {
											"value": "@item().SchemaName",
											"type": "Expression"
										},
										"tablename": {
											"value": "@item().TableName",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"annotations": [],
		"lastPublishTime": "2025-05-22T06:53:10Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}